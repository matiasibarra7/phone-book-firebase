{"version":3,"sources":["firebaseConfig.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","useState","nameInput","setNameInput","phoneInput","setPhoneInput","userList","setUserList","error","setError","success","setSuccess","IdToUpdate","setIdToUpdate","useEffect","getUsers","deletePerson","id","a","collection","doc","delete","console","log","editPerson","get","person","data","name","phone","updatePerson","e","preventDefault","set","docs","dataUsers","map","el","newUser","trim","newPerson","add","setTimeout","className","onSubmit","type","value","onChange","target","placeholder","length","i","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1971276e.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTbPzUKMEJwgrXVWvFQyDFhThMbgX5cbs\",\r\n  authDomain: \"udemy-auth-learning.firebaseapp.com\",\r\n  projectId: \"udemy-auth-learning\",\r\n  storageBucket: \"udemy-auth-learning.appspot.com\",\r\n  messagingSenderId: \"409133570692\",\r\n  appId: \"1:409133570692:web:9958d4098531ba38ac80d1\",\r\n  measurementId: \"G-3WJTJZHHP4\"\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nconst db = firebase.firestore()\r\n\r\nexport {db}","import React, { useState, useEffect } from \"react\";\nimport { db } from './firebaseConfig'\n\n\nfunction App() {\n  const [nameInput, setNameInput] = useState(\"\")\n  const [phoneInput, setPhoneInput] = useState('')\n  const [userList, setUserList] = useState([])\n  const [error, setError] = useState(null)\n  const [success, setSuccess] = useState(false)\n  const [IdToUpdate, setIdToUpdate] = useState(null)\n  \n\n  useEffect( ()=> {\n    getUsers()\n  }, [])\n\n  const deletePerson = async(id) => {\n    try {\n      await db.collection('phoneBook').doc(id).delete();\n      console.log(\"eliminado\");\n      getUsers()\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const editPerson = async(id) => {\n    try {\n      const person = await db.collection('phoneBook').doc(id).get()\n      const {name, phone} = person.data()\n      setPhoneInput(phone)\n      setNameInput(name)\n      console.log(name, phone);\n      setIdToUpdate(id)\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  const updatePerson = async(e) => {\n    e.preventDefault()\n    const updatePerson = {\n      name: nameInput,\n      phone: phoneInput\n    };\n    try {\n      await db.collection('phoneBook').doc(IdToUpdate).set(updatePerson)\n      console.log(\"Se actualizÃ³!\");\n      setIdToUpdate(null)\n      setPhoneInput('')\n      setNameInput('')\n      getUsers()\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  const getUsers = async() => {\n    const { docs } = await db.collection('phoneBook').get();\n    const dataUsers = docs.map(el => { return {id: el.id, ...el.data()}})\n    setUserList(dataUsers)\n  }\n\n  const newUser = async(e) => {\n    e.preventDefault();\n    \n    if (!nameInput.trim()) {\n      setError(\"Name can't be blanck\")\n    } else if (!phoneInput) {\n      setError(\"Phone can't be blanck\")\n    } else {\n      setError(null)\n\n      const newPerson = {\n        name: nameInput,\n        phone: phoneInput\n      };\n      try {\n        await db.collection('phoneBook').add(newPerson);\n        setNameInput('')\n        setPhoneInput('')\n        setSuccess(true)\n        getUsers()\n        setTimeout(() => {\n          setSuccess(false)\n        }, 2000)\n      }\n      catch(e) {\n        console.log(e);\n      }\n\n    }\n\n\n\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>New User</h2>\n          <form className=\"form-group\" onSubmit={IdToUpdate? updatePerson : newUser}>\n            <input type=\"text\" value={nameInput} onChange={(e) => setNameInput(e.target.value)} className=\"form-control\" placeholder=\"Type a name\"/>\n            <input type=\"number\" value={phoneInput} onChange={(e) => setPhoneInput(e.target.value)} className=\"form-control\" placeholder=\"Type a number phone\"/>\n            <div className=\"d-grid gap-2\">\n\n              {IdToUpdate?\n                <input type=\"submit\" value=\"Update user\" className=\"btn btn-primary btn-block mt-3\"/>\n                :\n                <input type=\"submit\" value=\"Add user\" className=\"btn btn-dark btn-block mt-3\"/>\n              }\n\n            </div>\n          </form>\n          {error? \n            <div className=\"text-danger mt-2\">{error}</div>\n            : <></>\n          }\n          {success?\n            <div className=\"text-success mt-2\">Person correctly added!</div>\n            : <></>\n          }\n        </div>\n        <div className=\"col\">\n          <h2>Users List</h2>\n          <ul className=\"list-group\">\n            {userList.length?\n              userList.map((el,i) => {\n                return (\n                <li className=\"list-group-item\" key={el.id + i}>\n                  <div className=\"row\"> \n                    <div className=\"col\">{el.name}</div>\n                    <div className=\"col\">{el.phone}</div>\n                    <div className=\"col btn-group float-end\">\n                      <button className=\"btn btn-secondary\" onClick={() => editPerson(el.id)}>Update</button>\n                      <button className=\"btn btn-danger\" onClick={() => deletePerson(el.id)}>Delete</button>\n                    </div>\n                  </div>\n                </li>)\n              })\n              : <div>There aren't people here...</div>\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}